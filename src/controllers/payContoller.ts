import { Context } from 'telegraf'
import { getUserIdByUsername } from '../firebase/user/gerUserId'
import { getUserStats } from '../firebase/user/getUserStats'
import { transferMoney } from '../firebase/user/transferMoney'
import { getMessageInfo } from '../utils/messageUtils'

export const payCommandHandler = async (ctx: Context) => {
	const messageInfo = getMessageInfo(ctx)

	if (!messageInfo) {
		return ctx.reply('–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î —Ñ–æ—Ä–º–∞—Ç—É')
	}

	const { userId, username, text } = messageInfo
	const args = text.split(' ')

	if (args.length < 3) {
		return ctx.reply(
			'<code>–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥–∏ ‚ùå\b /pay <—Å—É–º–∞> @user</code>',
			{ parse_mode: 'HTML' }
		)
	}

	const amount = Number(args[1])
	const targetUsername = args[2]?.replace('@', '')

	const targetUsernameId = await getUserIdByUsername(targetUsername)

	if (isNaN(amount) || amount <= 0) {
		return ctx.reply('–ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–∞ —Å—É–º–∞ –ø–µ—Ä–µ–∫–∞–∑—É ‚ùå')
	}

	const senderStats = await getUserStats(userId.toString())

	if (!senderStats) {
		return ctx.reply('–ê–∫–∞—É–Ω—Ç –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ ‚ùå')
	}

	if (!targetUsernameId) {
		return ctx.reply('–¶—ñ–ª—å–æ–≤–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ ‚ùå')
	}

	if (senderStats.balance < amount) {
		return ctx.reply('–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –º–æ–Ω–µ—Ç –Ω–∞ –±–∞–ª–∞–Ω—Å—ñ ‚ùå')
	} else if (amount < 100) {
		return ctx.reply('–ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∞ —Å—É–º–∞ –ø–µ—Ä–µ–∫–∞–∑—É 100 –º–æ–Ω–µ—Ç ‚ùå')
	} else {
		await transferMoney(userId.toString(), targetUsernameId.toString(), amount)
		await ctx.reply(
			`@${username} –ø–µ—Ä–µ–¥–∞—î @${targetUsername} ${amount} –º–æ–Ω–µ—Ç üí∞‚úÖ`
		)
	}
}
